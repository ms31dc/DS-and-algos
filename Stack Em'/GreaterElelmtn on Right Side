package com.company;
import java.util.*;
import com.sun.xml.internal.fastinfoset.algorithm.BooleanEncodingAlgorithm;
import org.omg.PortableInterceptor.SYSTEM_EXCEPTION;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;
import java.awt.Point;

import static java.lang.StrictMath.*;

import java.util.ArrayList;



//aacdb
//gafd
//cbgf



class Main {

    public static void stiockRnage(int a[])
    {
        int n=a.length;
        Stack<Integer> s=new Stack<>();
        s.push(n-1);
        String sb="";

        sb=" "+-1;
        //System.out.print(-1+" ");
        for(int i=n-2;i>=0;i--)
        {
            while(s.isEmpty()==false && a[i]>a[s.peek()])
            { s.pop();}///THis is used to check any greater than previous values are present in the stock


            int span = s.isEmpty()==true ? -1:a[i]>a[s.peek()] ?a[i]:a[s.peek()]; //calculate span before inserting , as the peek might change
            //if you calculate after inserting
            //System.out.print(span+" ");
            sb=span+" "+sb;
            s.push(i);

        }
        System.out.println(sb);

    }

    public static void main(String args[])
    {
        int [] a={5,15,10,8,6,12,3,18};
        stiockRnage(a);

    }

    }

