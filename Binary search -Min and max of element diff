 static  int leftbinarySearch(int arr[], int low, int high, int x)
    {
        if(low>high){return -1;}

        int mid= low+(high-low)/2;

        if((arr[mid]==x) && (mid==0|| arr[mid-1]!=x))
        {return mid;}

        if(arr[mid]>=x){return leftbinarySearch(arr,0,mid-1,x) ;}
        else {return leftbinarySearch(arr,mid+1,high,x) ;}

    }

static  int rightbinarySearch(int arr[], int low, int high, int x, int n)
{
    if(low>high){return -1;}

    int mid= low+(high-low)/2;

    if((arr[mid]==x) && (mid==n-1|| arr[mid+1]!=x))
    {return mid;}

    if(arr[mid]> x){return rightbinarySearch(arr,0,mid-1,x,n) ;}
    else {return rightbinarySearch(arr,mid+1,high,x,n) ;}

}

   System.out.println("right is"+ (rightbinarySearch(arr3,0, arr3.length-1, 3,arr3.length)));


        System.out.println("left is"+ (leftbinarySearch(arr3,0, arr3.length-1, 3)));
