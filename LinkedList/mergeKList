class Merge
{
      public static Node SortedMerge(Node a, Node b)
        {
            Node result = null;
            /* Base cases */
            if (a == null)
                return b;
            else if(b == null)
                return a;

            /* Pick either a or b, and recur */
            if(a.data <= b.data)
            {
                result = a;
                result.next = SortedMerge(a.next, b);
            }
            else
            {
                result = b;
                result.next = SortedMerge(a, b.next);
            }

            return result;
        }

        Node mergeKList(Node[]a,int N)
        {
            int last=N-1;
            
            while(last!=0)
            {
                int i=0,j=last;
                while(i<j)
                {
                    a[i]=SortedMerge(a[i],a[j]);
                    i++;j--;
                if(i>=j){last=j;}
                }
               

            }

            return a[0];
        }
}
