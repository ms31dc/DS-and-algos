
class Main {

    static void mergeSort(int arr[] , int l, int h)
    {
        if(l<h) {
            int m = (l + (h - l) / 2);
            mergeSort(arr, l, m);
            mergeSort(arr, m + 1, h);

            merge(arr, l, m, h);
        }
    }

    static void merge(int arr[] , int l, int m,int h)
    {
       int n1=m-l+1;
       int n2=h-m;
       int[] left = new int[n1];
        int[] right = new int[n2];

        for(int i=0;i<n1;i++)
        {
            left[i]=arr[l+i];

        }
        for(int j=0;j<n2;j++)
        {
            right[j]=arr[m+1+j];

        }

        int i =0;
        int j=0;
        int k=l;

        while(i<n1 && j<n2)
        {
            if(left[i]<=right[j])
            {arr[k++]=left[i++];}
            else{arr[k++]=right[j++];}
        }
        while(i<n1){arr[k++]=left[i++];}
        while(j<n2){arr[k++]=right[j++];}

    }




    public static void main(String args[])
    {
        Main stock = new Main();


        int  arr[] = {5, 7, 1, 6, 8, 2,4,11};
        mergeSort(arr,0,7);

        for (int i = 0; i < arr.length; i++)
        {

                System.out.print(arr[i]  + " ");

        }
